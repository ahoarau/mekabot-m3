// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ledx2xn_ec.proto

#ifndef PROTOBUF_ledx2xn_5fec_2eproto__INCLUDED
#define PROTOBUF_ledx2xn_5fec_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "component_base.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ledx2xn_5fec_2eproto();
void protobuf_AssignDesc_ledx2xn_5fec_2eproto();
void protobuf_ShutdownFile_ledx2xn_5fec_2eproto();

class M3LedX2XNEcStatus;
class M3LedX2XNEcRGB;
class M3LedX2XNEcCommand;
class M3LedX2XNEcParam;

// ===================================================================

class M3LedX2XNEcStatus : public ::google::protobuf::Message {
 public:
  M3LedX2XNEcStatus();
  virtual ~M3LedX2XNEcStatus();

  M3LedX2XNEcStatus(const M3LedX2XNEcStatus& from);

  inline M3LedX2XNEcStatus& operator=(const M3LedX2XNEcStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3LedX2XNEcStatus& default_instance();

  void Swap(M3LedX2XNEcStatus* other);

  // implements Message ----------------------------------------------

  M3LedX2XNEcStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3LedX2XNEcStatus& from);
  void MergeFrom(const M3LedX2XNEcStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .M3BaseStatus base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::M3BaseStatus& base() const;
  inline ::M3BaseStatus* mutable_base();
  inline ::M3BaseStatus* release_base();
  inline void set_allocated_base(::M3BaseStatus* base);

  // optional .M3EtherCATStatus ethercat = 2;
  inline bool has_ethercat() const;
  inline void clear_ethercat();
  static const int kEthercatFieldNumber = 2;
  inline const ::M3EtherCATStatus& ethercat() const;
  inline ::M3EtherCATStatus* mutable_ethercat();
  inline ::M3EtherCATStatus* release_ethercat();
  inline void set_allocated_ethercat(::M3EtherCATStatus* ethercat);

  // optional int32 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // optional int32 adc_ext_a = 4;
  inline bool has_adc_ext_a() const;
  inline void clear_adc_ext_a();
  static const int kAdcExtAFieldNumber = 4;
  inline ::google::protobuf::int32 adc_ext_a() const;
  inline void set_adc_ext_a(::google::protobuf::int32 value);

  // optional int32 adc_ext_b = 5;
  inline bool has_adc_ext_b() const;
  inline void clear_adc_ext_b();
  static const int kAdcExtBFieldNumber = 5;
  inline ::google::protobuf::int32 adc_ext_b() const;
  inline void set_adc_ext_b(::google::protobuf::int32 value);

  // optional int32 adc_ext_c = 6;
  inline bool has_adc_ext_c() const;
  inline void clear_adc_ext_c();
  static const int kAdcExtCFieldNumber = 6;
  inline ::google::protobuf::int32 adc_ext_c() const;
  inline void set_adc_ext_c(::google::protobuf::int32 value);

  // optional int32 adc_ext_d = 7;
  inline bool has_adc_ext_d() const;
  inline void clear_adc_ext_d();
  static const int kAdcExtDFieldNumber = 7;
  inline ::google::protobuf::int32 adc_ext_d() const;
  inline void set_adc_ext_d(::google::protobuf::int32 value);

  // optional int32 flags = 8;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 8;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:M3LedX2XNEcStatus)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_ethercat();
  inline void clear_has_ethercat();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_adc_ext_a();
  inline void clear_has_adc_ext_a();
  inline void set_has_adc_ext_b();
  inline void clear_has_adc_ext_b();
  inline void set_has_adc_ext_c();
  inline void clear_has_adc_ext_c();
  inline void set_has_adc_ext_d();
  inline void clear_has_adc_ext_d();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::M3BaseStatus* base_;
  ::M3EtherCATStatus* ethercat_;
  ::google::protobuf::int32 timestamp_;
  ::google::protobuf::int32 adc_ext_a_;
  ::google::protobuf::int32 adc_ext_b_;
  ::google::protobuf::int32 adc_ext_c_;
  ::google::protobuf::int32 adc_ext_d_;
  ::google::protobuf::int32 flags_;
  friend void  protobuf_AddDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_AssignDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_ShutdownFile_ledx2xn_5fec_2eproto();

  void InitAsDefaultInstance();
  static M3LedX2XNEcStatus* default_instance_;
};
// -------------------------------------------------------------------

class M3LedX2XNEcRGB : public ::google::protobuf::Message {
 public:
  M3LedX2XNEcRGB();
  virtual ~M3LedX2XNEcRGB();

  M3LedX2XNEcRGB(const M3LedX2XNEcRGB& from);

  inline M3LedX2XNEcRGB& operator=(const M3LedX2XNEcRGB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3LedX2XNEcRGB& default_instance();

  void Swap(M3LedX2XNEcRGB* other);

  // implements Message ----------------------------------------------

  M3LedX2XNEcRGB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3LedX2XNEcRGB& from);
  void MergeFrom(const M3LedX2XNEcRGB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 r = 1;
  inline int r_size() const;
  inline void clear_r();
  static const int kRFieldNumber = 1;
  inline ::google::protobuf::int32 r(int index) const;
  inline void set_r(int index, ::google::protobuf::int32 value);
  inline void add_r(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      r() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_r();

  // repeated int32 g = 2;
  inline int g_size() const;
  inline void clear_g();
  static const int kGFieldNumber = 2;
  inline ::google::protobuf::int32 g(int index) const;
  inline void set_g(int index, ::google::protobuf::int32 value);
  inline void add_g(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      g() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_g();

  // repeated int32 b = 3;
  inline int b_size() const;
  inline void clear_b();
  static const int kBFieldNumber = 3;
  inline ::google::protobuf::int32 b(int index) const;
  inline void set_b(int index, ::google::protobuf::int32 value);
  inline void add_b(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      b() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_b();

  // @@protoc_insertion_point(class_scope:M3LedX2XNEcRGB)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > r_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > g_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > b_;
  friend void  protobuf_AddDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_AssignDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_ShutdownFile_ledx2xn_5fec_2eproto();

  void InitAsDefaultInstance();
  static M3LedX2XNEcRGB* default_instance_;
};
// -------------------------------------------------------------------

class M3LedX2XNEcCommand : public ::google::protobuf::Message {
 public:
  M3LedX2XNEcCommand();
  virtual ~M3LedX2XNEcCommand();

  M3LedX2XNEcCommand(const M3LedX2XNEcCommand& from);

  inline M3LedX2XNEcCommand& operator=(const M3LedX2XNEcCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3LedX2XNEcCommand& default_instance();

  void Swap(M3LedX2XNEcCommand* other);

  // implements Message ----------------------------------------------

  M3LedX2XNEcCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3LedX2XNEcCommand& from);
  void MergeFrom(const M3LedX2XNEcCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 enable_a = 1;
  inline bool has_enable_a() const;
  inline void clear_enable_a();
  static const int kEnableAFieldNumber = 1;
  inline ::google::protobuf::int32 enable_a() const;
  inline void set_enable_a(::google::protobuf::int32 value);

  // optional int32 enable_b = 2;
  inline bool has_enable_b() const;
  inline void clear_enable_b();
  static const int kEnableBFieldNumber = 2;
  inline ::google::protobuf::int32 enable_b() const;
  inline void set_enable_b(::google::protobuf::int32 value);

  // optional .M3LedX2XNEcRGB branch_a = 3;
  inline bool has_branch_a() const;
  inline void clear_branch_a();
  static const int kBranchAFieldNumber = 3;
  inline const ::M3LedX2XNEcRGB& branch_a() const;
  inline ::M3LedX2XNEcRGB* mutable_branch_a();
  inline ::M3LedX2XNEcRGB* release_branch_a();
  inline void set_allocated_branch_a(::M3LedX2XNEcRGB* branch_a);

  // optional .M3LedX2XNEcRGB branch_b = 4;
  inline bool has_branch_b() const;
  inline void clear_branch_b();
  static const int kBranchBFieldNumber = 4;
  inline const ::M3LedX2XNEcRGB& branch_b() const;
  inline ::M3LedX2XNEcRGB* mutable_branch_b();
  inline ::M3LedX2XNEcRGB* release_branch_b();
  inline void set_allocated_branch_b(::M3LedX2XNEcRGB* branch_b);

  // @@protoc_insertion_point(class_scope:M3LedX2XNEcCommand)
 private:
  inline void set_has_enable_a();
  inline void clear_has_enable_a();
  inline void set_has_enable_b();
  inline void clear_has_enable_b();
  inline void set_has_branch_a();
  inline void clear_has_branch_a();
  inline void set_has_branch_b();
  inline void clear_has_branch_b();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 enable_a_;
  ::google::protobuf::int32 enable_b_;
  ::M3LedX2XNEcRGB* branch_a_;
  ::M3LedX2XNEcRGB* branch_b_;
  friend void  protobuf_AddDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_AssignDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_ShutdownFile_ledx2xn_5fec_2eproto();

  void InitAsDefaultInstance();
  static M3LedX2XNEcCommand* default_instance_;
};
// -------------------------------------------------------------------

class M3LedX2XNEcParam : public ::google::protobuf::Message {
 public:
  M3LedX2XNEcParam();
  virtual ~M3LedX2XNEcParam();

  M3LedX2XNEcParam(const M3LedX2XNEcParam& from);

  inline M3LedX2XNEcParam& operator=(const M3LedX2XNEcParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3LedX2XNEcParam& default_instance();

  void Swap(M3LedX2XNEcParam* other);

  // implements Message ----------------------------------------------

  M3LedX2XNEcParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3LedX2XNEcParam& from);
  void MergeFrom(const M3LedX2XNEcParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 config = 1;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 1;
  inline ::google::protobuf::int32 config() const;
  inline void set_config(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:M3LedX2XNEcParam)
 private:
  inline void set_has_config();
  inline void clear_has_config();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 config_;
  friend void  protobuf_AddDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_AssignDesc_ledx2xn_5fec_2eproto();
  friend void protobuf_ShutdownFile_ledx2xn_5fec_2eproto();

  void InitAsDefaultInstance();
  static M3LedX2XNEcParam* default_instance_;
};
// ===================================================================


// ===================================================================

// M3LedX2XNEcStatus

// optional .M3BaseStatus base = 1;
inline bool M3LedX2XNEcStatus::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void M3LedX2XNEcStatus::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void M3LedX2XNEcStatus::clear_base() {
  if (base_ != NULL) base_->::M3BaseStatus::Clear();
  clear_has_base();
}
inline const ::M3BaseStatus& M3LedX2XNEcStatus::base() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::M3BaseStatus* M3LedX2XNEcStatus::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::M3BaseStatus;
  // @@protoc_insertion_point(field_mutable:M3LedX2XNEcStatus.base)
  return base_;
}
inline ::M3BaseStatus* M3LedX2XNEcStatus::release_base() {
  clear_has_base();
  ::M3BaseStatus* temp = base_;
  base_ = NULL;
  return temp;
}
inline void M3LedX2XNEcStatus::set_allocated_base(::M3BaseStatus* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:M3LedX2XNEcStatus.base)
}

// optional .M3EtherCATStatus ethercat = 2;
inline bool M3LedX2XNEcStatus::has_ethercat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_ethercat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void M3LedX2XNEcStatus::clear_has_ethercat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void M3LedX2XNEcStatus::clear_ethercat() {
  if (ethercat_ != NULL) ethercat_->::M3EtherCATStatus::Clear();
  clear_has_ethercat();
}
inline const ::M3EtherCATStatus& M3LedX2XNEcStatus::ethercat() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.ethercat)
  return ethercat_ != NULL ? *ethercat_ : *default_instance_->ethercat_;
}
inline ::M3EtherCATStatus* M3LedX2XNEcStatus::mutable_ethercat() {
  set_has_ethercat();
  if (ethercat_ == NULL) ethercat_ = new ::M3EtherCATStatus;
  // @@protoc_insertion_point(field_mutable:M3LedX2XNEcStatus.ethercat)
  return ethercat_;
}
inline ::M3EtherCATStatus* M3LedX2XNEcStatus::release_ethercat() {
  clear_has_ethercat();
  ::M3EtherCATStatus* temp = ethercat_;
  ethercat_ = NULL;
  return temp;
}
inline void M3LedX2XNEcStatus::set_allocated_ethercat(::M3EtherCATStatus* ethercat) {
  delete ethercat_;
  ethercat_ = ethercat;
  if (ethercat) {
    set_has_ethercat();
  } else {
    clear_has_ethercat();
  }
  // @@protoc_insertion_point(field_set_allocated:M3LedX2XNEcStatus.ethercat)
}

// optional int32 timestamp = 3;
inline bool M3LedX2XNEcStatus::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void M3LedX2XNEcStatus::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void M3LedX2XNEcStatus::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 M3LedX2XNEcStatus::timestamp() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.timestamp)
  return timestamp_;
}
inline void M3LedX2XNEcStatus::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcStatus.timestamp)
}

// optional int32 adc_ext_a = 4;
inline bool M3LedX2XNEcStatus::has_adc_ext_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_adc_ext_a() {
  _has_bits_[0] |= 0x00000008u;
}
inline void M3LedX2XNEcStatus::clear_has_adc_ext_a() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void M3LedX2XNEcStatus::clear_adc_ext_a() {
  adc_ext_a_ = 0;
  clear_has_adc_ext_a();
}
inline ::google::protobuf::int32 M3LedX2XNEcStatus::adc_ext_a() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.adc_ext_a)
  return adc_ext_a_;
}
inline void M3LedX2XNEcStatus::set_adc_ext_a(::google::protobuf::int32 value) {
  set_has_adc_ext_a();
  adc_ext_a_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcStatus.adc_ext_a)
}

// optional int32 adc_ext_b = 5;
inline bool M3LedX2XNEcStatus::has_adc_ext_b() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_adc_ext_b() {
  _has_bits_[0] |= 0x00000010u;
}
inline void M3LedX2XNEcStatus::clear_has_adc_ext_b() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void M3LedX2XNEcStatus::clear_adc_ext_b() {
  adc_ext_b_ = 0;
  clear_has_adc_ext_b();
}
inline ::google::protobuf::int32 M3LedX2XNEcStatus::adc_ext_b() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.adc_ext_b)
  return adc_ext_b_;
}
inline void M3LedX2XNEcStatus::set_adc_ext_b(::google::protobuf::int32 value) {
  set_has_adc_ext_b();
  adc_ext_b_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcStatus.adc_ext_b)
}

// optional int32 adc_ext_c = 6;
inline bool M3LedX2XNEcStatus::has_adc_ext_c() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_adc_ext_c() {
  _has_bits_[0] |= 0x00000020u;
}
inline void M3LedX2XNEcStatus::clear_has_adc_ext_c() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void M3LedX2XNEcStatus::clear_adc_ext_c() {
  adc_ext_c_ = 0;
  clear_has_adc_ext_c();
}
inline ::google::protobuf::int32 M3LedX2XNEcStatus::adc_ext_c() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.adc_ext_c)
  return adc_ext_c_;
}
inline void M3LedX2XNEcStatus::set_adc_ext_c(::google::protobuf::int32 value) {
  set_has_adc_ext_c();
  adc_ext_c_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcStatus.adc_ext_c)
}

// optional int32 adc_ext_d = 7;
inline bool M3LedX2XNEcStatus::has_adc_ext_d() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_adc_ext_d() {
  _has_bits_[0] |= 0x00000040u;
}
inline void M3LedX2XNEcStatus::clear_has_adc_ext_d() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void M3LedX2XNEcStatus::clear_adc_ext_d() {
  adc_ext_d_ = 0;
  clear_has_adc_ext_d();
}
inline ::google::protobuf::int32 M3LedX2XNEcStatus::adc_ext_d() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.adc_ext_d)
  return adc_ext_d_;
}
inline void M3LedX2XNEcStatus::set_adc_ext_d(::google::protobuf::int32 value) {
  set_has_adc_ext_d();
  adc_ext_d_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcStatus.adc_ext_d)
}

// optional int32 flags = 8;
inline bool M3LedX2XNEcStatus::has_flags() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void M3LedX2XNEcStatus::set_has_flags() {
  _has_bits_[0] |= 0x00000080u;
}
inline void M3LedX2XNEcStatus::clear_has_flags() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void M3LedX2XNEcStatus::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 M3LedX2XNEcStatus::flags() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcStatus.flags)
  return flags_;
}
inline void M3LedX2XNEcStatus::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcStatus.flags)
}

// -------------------------------------------------------------------

// M3LedX2XNEcRGB

// repeated int32 r = 1;
inline int M3LedX2XNEcRGB::r_size() const {
  return r_.size();
}
inline void M3LedX2XNEcRGB::clear_r() {
  r_.Clear();
}
inline ::google::protobuf::int32 M3LedX2XNEcRGB::r(int index) const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcRGB.r)
  return r_.Get(index);
}
inline void M3LedX2XNEcRGB::set_r(int index, ::google::protobuf::int32 value) {
  r_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3LedX2XNEcRGB.r)
}
inline void M3LedX2XNEcRGB::add_r(::google::protobuf::int32 value) {
  r_.Add(value);
  // @@protoc_insertion_point(field_add:M3LedX2XNEcRGB.r)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
M3LedX2XNEcRGB::r() const {
  // @@protoc_insertion_point(field_list:M3LedX2XNEcRGB.r)
  return r_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
M3LedX2XNEcRGB::mutable_r() {
  // @@protoc_insertion_point(field_mutable_list:M3LedX2XNEcRGB.r)
  return &r_;
}

// repeated int32 g = 2;
inline int M3LedX2XNEcRGB::g_size() const {
  return g_.size();
}
inline void M3LedX2XNEcRGB::clear_g() {
  g_.Clear();
}
inline ::google::protobuf::int32 M3LedX2XNEcRGB::g(int index) const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcRGB.g)
  return g_.Get(index);
}
inline void M3LedX2XNEcRGB::set_g(int index, ::google::protobuf::int32 value) {
  g_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3LedX2XNEcRGB.g)
}
inline void M3LedX2XNEcRGB::add_g(::google::protobuf::int32 value) {
  g_.Add(value);
  // @@protoc_insertion_point(field_add:M3LedX2XNEcRGB.g)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
M3LedX2XNEcRGB::g() const {
  // @@protoc_insertion_point(field_list:M3LedX2XNEcRGB.g)
  return g_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
M3LedX2XNEcRGB::mutable_g() {
  // @@protoc_insertion_point(field_mutable_list:M3LedX2XNEcRGB.g)
  return &g_;
}

// repeated int32 b = 3;
inline int M3LedX2XNEcRGB::b_size() const {
  return b_.size();
}
inline void M3LedX2XNEcRGB::clear_b() {
  b_.Clear();
}
inline ::google::protobuf::int32 M3LedX2XNEcRGB::b(int index) const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcRGB.b)
  return b_.Get(index);
}
inline void M3LedX2XNEcRGB::set_b(int index, ::google::protobuf::int32 value) {
  b_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3LedX2XNEcRGB.b)
}
inline void M3LedX2XNEcRGB::add_b(::google::protobuf::int32 value) {
  b_.Add(value);
  // @@protoc_insertion_point(field_add:M3LedX2XNEcRGB.b)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
M3LedX2XNEcRGB::b() const {
  // @@protoc_insertion_point(field_list:M3LedX2XNEcRGB.b)
  return b_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
M3LedX2XNEcRGB::mutable_b() {
  // @@protoc_insertion_point(field_mutable_list:M3LedX2XNEcRGB.b)
  return &b_;
}

// -------------------------------------------------------------------

// M3LedX2XNEcCommand

// optional int32 enable_a = 1;
inline bool M3LedX2XNEcCommand::has_enable_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void M3LedX2XNEcCommand::set_has_enable_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void M3LedX2XNEcCommand::clear_has_enable_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void M3LedX2XNEcCommand::clear_enable_a() {
  enable_a_ = 0;
  clear_has_enable_a();
}
inline ::google::protobuf::int32 M3LedX2XNEcCommand::enable_a() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcCommand.enable_a)
  return enable_a_;
}
inline void M3LedX2XNEcCommand::set_enable_a(::google::protobuf::int32 value) {
  set_has_enable_a();
  enable_a_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcCommand.enable_a)
}

// optional int32 enable_b = 2;
inline bool M3LedX2XNEcCommand::has_enable_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void M3LedX2XNEcCommand::set_has_enable_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void M3LedX2XNEcCommand::clear_has_enable_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void M3LedX2XNEcCommand::clear_enable_b() {
  enable_b_ = 0;
  clear_has_enable_b();
}
inline ::google::protobuf::int32 M3LedX2XNEcCommand::enable_b() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcCommand.enable_b)
  return enable_b_;
}
inline void M3LedX2XNEcCommand::set_enable_b(::google::protobuf::int32 value) {
  set_has_enable_b();
  enable_b_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcCommand.enable_b)
}

// optional .M3LedX2XNEcRGB branch_a = 3;
inline bool M3LedX2XNEcCommand::has_branch_a() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void M3LedX2XNEcCommand::set_has_branch_a() {
  _has_bits_[0] |= 0x00000004u;
}
inline void M3LedX2XNEcCommand::clear_has_branch_a() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void M3LedX2XNEcCommand::clear_branch_a() {
  if (branch_a_ != NULL) branch_a_->::M3LedX2XNEcRGB::Clear();
  clear_has_branch_a();
}
inline const ::M3LedX2XNEcRGB& M3LedX2XNEcCommand::branch_a() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcCommand.branch_a)
  return branch_a_ != NULL ? *branch_a_ : *default_instance_->branch_a_;
}
inline ::M3LedX2XNEcRGB* M3LedX2XNEcCommand::mutable_branch_a() {
  set_has_branch_a();
  if (branch_a_ == NULL) branch_a_ = new ::M3LedX2XNEcRGB;
  // @@protoc_insertion_point(field_mutable:M3LedX2XNEcCommand.branch_a)
  return branch_a_;
}
inline ::M3LedX2XNEcRGB* M3LedX2XNEcCommand::release_branch_a() {
  clear_has_branch_a();
  ::M3LedX2XNEcRGB* temp = branch_a_;
  branch_a_ = NULL;
  return temp;
}
inline void M3LedX2XNEcCommand::set_allocated_branch_a(::M3LedX2XNEcRGB* branch_a) {
  delete branch_a_;
  branch_a_ = branch_a;
  if (branch_a) {
    set_has_branch_a();
  } else {
    clear_has_branch_a();
  }
  // @@protoc_insertion_point(field_set_allocated:M3LedX2XNEcCommand.branch_a)
}

// optional .M3LedX2XNEcRGB branch_b = 4;
inline bool M3LedX2XNEcCommand::has_branch_b() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void M3LedX2XNEcCommand::set_has_branch_b() {
  _has_bits_[0] |= 0x00000008u;
}
inline void M3LedX2XNEcCommand::clear_has_branch_b() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void M3LedX2XNEcCommand::clear_branch_b() {
  if (branch_b_ != NULL) branch_b_->::M3LedX2XNEcRGB::Clear();
  clear_has_branch_b();
}
inline const ::M3LedX2XNEcRGB& M3LedX2XNEcCommand::branch_b() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcCommand.branch_b)
  return branch_b_ != NULL ? *branch_b_ : *default_instance_->branch_b_;
}
inline ::M3LedX2XNEcRGB* M3LedX2XNEcCommand::mutable_branch_b() {
  set_has_branch_b();
  if (branch_b_ == NULL) branch_b_ = new ::M3LedX2XNEcRGB;
  // @@protoc_insertion_point(field_mutable:M3LedX2XNEcCommand.branch_b)
  return branch_b_;
}
inline ::M3LedX2XNEcRGB* M3LedX2XNEcCommand::release_branch_b() {
  clear_has_branch_b();
  ::M3LedX2XNEcRGB* temp = branch_b_;
  branch_b_ = NULL;
  return temp;
}
inline void M3LedX2XNEcCommand::set_allocated_branch_b(::M3LedX2XNEcRGB* branch_b) {
  delete branch_b_;
  branch_b_ = branch_b;
  if (branch_b) {
    set_has_branch_b();
  } else {
    clear_has_branch_b();
  }
  // @@protoc_insertion_point(field_set_allocated:M3LedX2XNEcCommand.branch_b)
}

// -------------------------------------------------------------------

// M3LedX2XNEcParam

// optional int32 config = 1;
inline bool M3LedX2XNEcParam::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void M3LedX2XNEcParam::set_has_config() {
  _has_bits_[0] |= 0x00000001u;
}
inline void M3LedX2XNEcParam::clear_has_config() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void M3LedX2XNEcParam::clear_config() {
  config_ = 0;
  clear_has_config();
}
inline ::google::protobuf::int32 M3LedX2XNEcParam::config() const {
  // @@protoc_insertion_point(field_get:M3LedX2XNEcParam.config)
  return config_;
}
inline void M3LedX2XNEcParam::set_config(::google::protobuf::int32 value) {
  set_has_config();
  config_ = value;
  // @@protoc_insertion_point(field_set:M3LedX2XNEcParam.config)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ledx2xn_5fec_2eproto__INCLUDED
