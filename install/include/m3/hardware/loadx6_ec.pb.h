// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: loadx6_ec.proto

#ifndef PROTOBUF_loadx6_5fec_2eproto__INCLUDED
#define PROTOBUF_loadx6_5fec_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "component_base.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_loadx6_5fec_2eproto();
void protobuf_AssignDesc_loadx6_5fec_2eproto();
void protobuf_ShutdownFile_loadx6_5fec_2eproto();

class M3LoadX6EcStatus;
class M3LoadX6EcCommand;
class M3LoadX6EcParam;

// ===================================================================

class M3LoadX6EcStatus : public ::google::protobuf::Message {
 public:
  M3LoadX6EcStatus();
  virtual ~M3LoadX6EcStatus();

  M3LoadX6EcStatus(const M3LoadX6EcStatus& from);

  inline M3LoadX6EcStatus& operator=(const M3LoadX6EcStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3LoadX6EcStatus& default_instance();

  void Swap(M3LoadX6EcStatus* other);

  // implements Message ----------------------------------------------

  M3LoadX6EcStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3LoadX6EcStatus& from);
  void MergeFrom(const M3LoadX6EcStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .M3BaseStatus base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::M3BaseStatus& base() const;
  inline ::M3BaseStatus* mutable_base();
  inline ::M3BaseStatus* release_base();
  inline void set_allocated_base(::M3BaseStatus* base);

  // optional .M3EtherCATStatus ethercat = 2;
  inline bool has_ethercat() const;
  inline void clear_ethercat();
  static const int kEthercatFieldNumber = 2;
  inline const ::M3EtherCATStatus& ethercat() const;
  inline ::M3EtherCATStatus* mutable_ethercat();
  inline ::M3EtherCATStatus* release_ethercat();
  inline void set_allocated_ethercat(::M3EtherCATStatus* ethercat);

  // optional uint64 timestamp = 3;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // optional int32 dig_ext_0 = 4;
  inline bool has_dig_ext_0() const;
  inline void clear_dig_ext_0();
  static const int kDigExt0FieldNumber = 4;
  inline ::google::protobuf::int32 dig_ext_0() const;
  inline void set_dig_ext_0(::google::protobuf::int32 value);

  // optional int32 adc_ext_0 = 5;
  inline bool has_adc_ext_0() const;
  inline void clear_adc_ext_0();
  static const int kAdcExt0FieldNumber = 5;
  inline ::google::protobuf::int32 adc_ext_0() const;
  inline void set_adc_ext_0(::google::protobuf::int32 value);

  // optional int32 adc_ext_1 = 6;
  inline bool has_adc_ext_1() const;
  inline void clear_adc_ext_1();
  static const int kAdcExt1FieldNumber = 6;
  inline ::google::protobuf::int32 adc_ext_1() const;
  inline void set_adc_ext_1(::google::protobuf::int32 value);

  // optional int32 adc_ext_2 = 7;
  inline bool has_adc_ext_2() const;
  inline void clear_adc_ext_2();
  static const int kAdcExt2FieldNumber = 7;
  inline ::google::protobuf::int32 adc_ext_2() const;
  inline void set_adc_ext_2(::google::protobuf::int32 value);

  // optional int32 adc_load_0 = 8;
  inline bool has_adc_load_0() const;
  inline void clear_adc_load_0();
  static const int kAdcLoad0FieldNumber = 8;
  inline ::google::protobuf::int32 adc_load_0() const;
  inline void set_adc_load_0(::google::protobuf::int32 value);

  // optional int32 adc_load_1 = 9;
  inline bool has_adc_load_1() const;
  inline void clear_adc_load_1();
  static const int kAdcLoad1FieldNumber = 9;
  inline ::google::protobuf::int32 adc_load_1() const;
  inline void set_adc_load_1(::google::protobuf::int32 value);

  // optional int32 adc_load_2 = 10;
  inline bool has_adc_load_2() const;
  inline void clear_adc_load_2();
  static const int kAdcLoad2FieldNumber = 10;
  inline ::google::protobuf::int32 adc_load_2() const;
  inline void set_adc_load_2(::google::protobuf::int32 value);

  // optional int32 adc_load_3 = 11;
  inline bool has_adc_load_3() const;
  inline void clear_adc_load_3();
  static const int kAdcLoad3FieldNumber = 11;
  inline ::google::protobuf::int32 adc_load_3() const;
  inline void set_adc_load_3(::google::protobuf::int32 value);

  // optional int32 adc_load_4 = 12;
  inline bool has_adc_load_4() const;
  inline void clear_adc_load_4();
  static const int kAdcLoad4FieldNumber = 12;
  inline ::google::protobuf::int32 adc_load_4() const;
  inline void set_adc_load_4(::google::protobuf::int32 value);

  // optional int32 adc_load_5 = 13;
  inline bool has_adc_load_5() const;
  inline void clear_adc_load_5();
  static const int kAdcLoad5FieldNumber = 13;
  inline ::google::protobuf::int32 adc_load_5() const;
  inline void set_adc_load_5(::google::protobuf::int32 value);

  // optional int32 flags = 14;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 14;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:M3LoadX6EcStatus)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_ethercat();
  inline void clear_has_ethercat();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_dig_ext_0();
  inline void clear_has_dig_ext_0();
  inline void set_has_adc_ext_0();
  inline void clear_has_adc_ext_0();
  inline void set_has_adc_ext_1();
  inline void clear_has_adc_ext_1();
  inline void set_has_adc_ext_2();
  inline void clear_has_adc_ext_2();
  inline void set_has_adc_load_0();
  inline void clear_has_adc_load_0();
  inline void set_has_adc_load_1();
  inline void clear_has_adc_load_1();
  inline void set_has_adc_load_2();
  inline void clear_has_adc_load_2();
  inline void set_has_adc_load_3();
  inline void clear_has_adc_load_3();
  inline void set_has_adc_load_4();
  inline void clear_has_adc_load_4();
  inline void set_has_adc_load_5();
  inline void clear_has_adc_load_5();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::M3BaseStatus* base_;
  ::M3EtherCATStatus* ethercat_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::int32 dig_ext_0_;
  ::google::protobuf::int32 adc_ext_0_;
  ::google::protobuf::int32 adc_ext_1_;
  ::google::protobuf::int32 adc_ext_2_;
  ::google::protobuf::int32 adc_load_0_;
  ::google::protobuf::int32 adc_load_1_;
  ::google::protobuf::int32 adc_load_2_;
  ::google::protobuf::int32 adc_load_3_;
  ::google::protobuf::int32 adc_load_4_;
  ::google::protobuf::int32 adc_load_5_;
  ::google::protobuf::int32 flags_;
  friend void  protobuf_AddDesc_loadx6_5fec_2eproto();
  friend void protobuf_AssignDesc_loadx6_5fec_2eproto();
  friend void protobuf_ShutdownFile_loadx6_5fec_2eproto();

  void InitAsDefaultInstance();
  static M3LoadX6EcStatus* default_instance_;
};
// -------------------------------------------------------------------

class M3LoadX6EcCommand : public ::google::protobuf::Message {
 public:
  M3LoadX6EcCommand();
  virtual ~M3LoadX6EcCommand();

  M3LoadX6EcCommand(const M3LoadX6EcCommand& from);

  inline M3LoadX6EcCommand& operator=(const M3LoadX6EcCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3LoadX6EcCommand& default_instance();

  void Swap(M3LoadX6EcCommand* other);

  // implements Message ----------------------------------------------

  M3LoadX6EcCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3LoadX6EcCommand& from);
  void MergeFrom(const M3LoadX6EcCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:M3LoadX6EcCommand)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_loadx6_5fec_2eproto();
  friend void protobuf_AssignDesc_loadx6_5fec_2eproto();
  friend void protobuf_ShutdownFile_loadx6_5fec_2eproto();

  void InitAsDefaultInstance();
  static M3LoadX6EcCommand* default_instance_;
};
// -------------------------------------------------------------------

class M3LoadX6EcParam : public ::google::protobuf::Message {
 public:
  M3LoadX6EcParam();
  virtual ~M3LoadX6EcParam();

  M3LoadX6EcParam(const M3LoadX6EcParam& from);

  inline M3LoadX6EcParam& operator=(const M3LoadX6EcParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3LoadX6EcParam& default_instance();

  void Swap(M3LoadX6EcParam* other);

  // implements Message ----------------------------------------------

  M3LoadX6EcParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3LoadX6EcParam& from);
  void MergeFrom(const M3LoadX6EcParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 config = 1;
  inline bool has_config() const;
  inline void clear_config();
  static const int kConfigFieldNumber = 1;
  inline ::google::protobuf::int32 config() const;
  inline void set_config(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:M3LoadX6EcParam)
 private:
  inline void set_has_config();
  inline void clear_has_config();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 config_;
  friend void  protobuf_AddDesc_loadx6_5fec_2eproto();
  friend void protobuf_AssignDesc_loadx6_5fec_2eproto();
  friend void protobuf_ShutdownFile_loadx6_5fec_2eproto();

  void InitAsDefaultInstance();
  static M3LoadX6EcParam* default_instance_;
};
// ===================================================================


// ===================================================================

// M3LoadX6EcStatus

// optional .M3BaseStatus base = 1;
inline bool M3LoadX6EcStatus::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void M3LoadX6EcStatus::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void M3LoadX6EcStatus::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void M3LoadX6EcStatus::clear_base() {
  if (base_ != NULL) base_->::M3BaseStatus::Clear();
  clear_has_base();
}
inline const ::M3BaseStatus& M3LoadX6EcStatus::base() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::M3BaseStatus* M3LoadX6EcStatus::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::M3BaseStatus;
  // @@protoc_insertion_point(field_mutable:M3LoadX6EcStatus.base)
  return base_;
}
inline ::M3BaseStatus* M3LoadX6EcStatus::release_base() {
  clear_has_base();
  ::M3BaseStatus* temp = base_;
  base_ = NULL;
  return temp;
}
inline void M3LoadX6EcStatus::set_allocated_base(::M3BaseStatus* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:M3LoadX6EcStatus.base)
}

// optional .M3EtherCATStatus ethercat = 2;
inline bool M3LoadX6EcStatus::has_ethercat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void M3LoadX6EcStatus::set_has_ethercat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void M3LoadX6EcStatus::clear_has_ethercat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void M3LoadX6EcStatus::clear_ethercat() {
  if (ethercat_ != NULL) ethercat_->::M3EtherCATStatus::Clear();
  clear_has_ethercat();
}
inline const ::M3EtherCATStatus& M3LoadX6EcStatus::ethercat() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.ethercat)
  return ethercat_ != NULL ? *ethercat_ : *default_instance_->ethercat_;
}
inline ::M3EtherCATStatus* M3LoadX6EcStatus::mutable_ethercat() {
  set_has_ethercat();
  if (ethercat_ == NULL) ethercat_ = new ::M3EtherCATStatus;
  // @@protoc_insertion_point(field_mutable:M3LoadX6EcStatus.ethercat)
  return ethercat_;
}
inline ::M3EtherCATStatus* M3LoadX6EcStatus::release_ethercat() {
  clear_has_ethercat();
  ::M3EtherCATStatus* temp = ethercat_;
  ethercat_ = NULL;
  return temp;
}
inline void M3LoadX6EcStatus::set_allocated_ethercat(::M3EtherCATStatus* ethercat) {
  delete ethercat_;
  ethercat_ = ethercat;
  if (ethercat) {
    set_has_ethercat();
  } else {
    clear_has_ethercat();
  }
  // @@protoc_insertion_point(field_set_allocated:M3LoadX6EcStatus.ethercat)
}

// optional uint64 timestamp = 3;
inline bool M3LoadX6EcStatus::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void M3LoadX6EcStatus::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void M3LoadX6EcStatus::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void M3LoadX6EcStatus::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 M3LoadX6EcStatus::timestamp() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.timestamp)
  return timestamp_;
}
inline void M3LoadX6EcStatus::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.timestamp)
}

// optional int32 dig_ext_0 = 4;
inline bool M3LoadX6EcStatus::has_dig_ext_0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void M3LoadX6EcStatus::set_has_dig_ext_0() {
  _has_bits_[0] |= 0x00000008u;
}
inline void M3LoadX6EcStatus::clear_has_dig_ext_0() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void M3LoadX6EcStatus::clear_dig_ext_0() {
  dig_ext_0_ = 0;
  clear_has_dig_ext_0();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::dig_ext_0() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.dig_ext_0)
  return dig_ext_0_;
}
inline void M3LoadX6EcStatus::set_dig_ext_0(::google::protobuf::int32 value) {
  set_has_dig_ext_0();
  dig_ext_0_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.dig_ext_0)
}

// optional int32 adc_ext_0 = 5;
inline bool M3LoadX6EcStatus::has_adc_ext_0() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_ext_0() {
  _has_bits_[0] |= 0x00000010u;
}
inline void M3LoadX6EcStatus::clear_has_adc_ext_0() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void M3LoadX6EcStatus::clear_adc_ext_0() {
  adc_ext_0_ = 0;
  clear_has_adc_ext_0();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_ext_0() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_ext_0)
  return adc_ext_0_;
}
inline void M3LoadX6EcStatus::set_adc_ext_0(::google::protobuf::int32 value) {
  set_has_adc_ext_0();
  adc_ext_0_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_ext_0)
}

// optional int32 adc_ext_1 = 6;
inline bool M3LoadX6EcStatus::has_adc_ext_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_ext_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void M3LoadX6EcStatus::clear_has_adc_ext_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void M3LoadX6EcStatus::clear_adc_ext_1() {
  adc_ext_1_ = 0;
  clear_has_adc_ext_1();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_ext_1() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_ext_1)
  return adc_ext_1_;
}
inline void M3LoadX6EcStatus::set_adc_ext_1(::google::protobuf::int32 value) {
  set_has_adc_ext_1();
  adc_ext_1_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_ext_1)
}

// optional int32 adc_ext_2 = 7;
inline bool M3LoadX6EcStatus::has_adc_ext_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_ext_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void M3LoadX6EcStatus::clear_has_adc_ext_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void M3LoadX6EcStatus::clear_adc_ext_2() {
  adc_ext_2_ = 0;
  clear_has_adc_ext_2();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_ext_2() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_ext_2)
  return adc_ext_2_;
}
inline void M3LoadX6EcStatus::set_adc_ext_2(::google::protobuf::int32 value) {
  set_has_adc_ext_2();
  adc_ext_2_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_ext_2)
}

// optional int32 adc_load_0 = 8;
inline bool M3LoadX6EcStatus::has_adc_load_0() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_load_0() {
  _has_bits_[0] |= 0x00000080u;
}
inline void M3LoadX6EcStatus::clear_has_adc_load_0() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void M3LoadX6EcStatus::clear_adc_load_0() {
  adc_load_0_ = 0;
  clear_has_adc_load_0();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_load_0() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_load_0)
  return adc_load_0_;
}
inline void M3LoadX6EcStatus::set_adc_load_0(::google::protobuf::int32 value) {
  set_has_adc_load_0();
  adc_load_0_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_load_0)
}

// optional int32 adc_load_1 = 9;
inline bool M3LoadX6EcStatus::has_adc_load_1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_load_1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void M3LoadX6EcStatus::clear_has_adc_load_1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void M3LoadX6EcStatus::clear_adc_load_1() {
  adc_load_1_ = 0;
  clear_has_adc_load_1();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_load_1() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_load_1)
  return adc_load_1_;
}
inline void M3LoadX6EcStatus::set_adc_load_1(::google::protobuf::int32 value) {
  set_has_adc_load_1();
  adc_load_1_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_load_1)
}

// optional int32 adc_load_2 = 10;
inline bool M3LoadX6EcStatus::has_adc_load_2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_load_2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void M3LoadX6EcStatus::clear_has_adc_load_2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void M3LoadX6EcStatus::clear_adc_load_2() {
  adc_load_2_ = 0;
  clear_has_adc_load_2();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_load_2() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_load_2)
  return adc_load_2_;
}
inline void M3LoadX6EcStatus::set_adc_load_2(::google::protobuf::int32 value) {
  set_has_adc_load_2();
  adc_load_2_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_load_2)
}

// optional int32 adc_load_3 = 11;
inline bool M3LoadX6EcStatus::has_adc_load_3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_load_3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void M3LoadX6EcStatus::clear_has_adc_load_3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void M3LoadX6EcStatus::clear_adc_load_3() {
  adc_load_3_ = 0;
  clear_has_adc_load_3();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_load_3() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_load_3)
  return adc_load_3_;
}
inline void M3LoadX6EcStatus::set_adc_load_3(::google::protobuf::int32 value) {
  set_has_adc_load_3();
  adc_load_3_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_load_3)
}

// optional int32 adc_load_4 = 12;
inline bool M3LoadX6EcStatus::has_adc_load_4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_load_4() {
  _has_bits_[0] |= 0x00000800u;
}
inline void M3LoadX6EcStatus::clear_has_adc_load_4() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void M3LoadX6EcStatus::clear_adc_load_4() {
  adc_load_4_ = 0;
  clear_has_adc_load_4();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_load_4() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_load_4)
  return adc_load_4_;
}
inline void M3LoadX6EcStatus::set_adc_load_4(::google::protobuf::int32 value) {
  set_has_adc_load_4();
  adc_load_4_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_load_4)
}

// optional int32 adc_load_5 = 13;
inline bool M3LoadX6EcStatus::has_adc_load_5() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void M3LoadX6EcStatus::set_has_adc_load_5() {
  _has_bits_[0] |= 0x00001000u;
}
inline void M3LoadX6EcStatus::clear_has_adc_load_5() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void M3LoadX6EcStatus::clear_adc_load_5() {
  adc_load_5_ = 0;
  clear_has_adc_load_5();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::adc_load_5() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.adc_load_5)
  return adc_load_5_;
}
inline void M3LoadX6EcStatus::set_adc_load_5(::google::protobuf::int32 value) {
  set_has_adc_load_5();
  adc_load_5_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.adc_load_5)
}

// optional int32 flags = 14;
inline bool M3LoadX6EcStatus::has_flags() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void M3LoadX6EcStatus::set_has_flags() {
  _has_bits_[0] |= 0x00002000u;
}
inline void M3LoadX6EcStatus::clear_has_flags() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void M3LoadX6EcStatus::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 M3LoadX6EcStatus::flags() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcStatus.flags)
  return flags_;
}
inline void M3LoadX6EcStatus::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcStatus.flags)
}

// -------------------------------------------------------------------

// M3LoadX6EcCommand

// -------------------------------------------------------------------

// M3LoadX6EcParam

// optional int32 config = 1;
inline bool M3LoadX6EcParam::has_config() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void M3LoadX6EcParam::set_has_config() {
  _has_bits_[0] |= 0x00000001u;
}
inline void M3LoadX6EcParam::clear_has_config() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void M3LoadX6EcParam::clear_config() {
  config_ = 0;
  clear_has_config();
}
inline ::google::protobuf::int32 M3LoadX6EcParam::config() const {
  // @@protoc_insertion_point(field_get:M3LoadX6EcParam.config)
  return config_;
}
inline void M3LoadX6EcParam::set_config(::google::protobuf::int32 value) {
  set_has_config();
  config_ = value;
  // @@protoc_insertion_point(field_set:M3LoadX6EcParam.config)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_loadx6_5fec_2eproto__INCLUDED
