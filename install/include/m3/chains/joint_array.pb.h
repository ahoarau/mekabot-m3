// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: joint_array.proto

#ifndef PROTOBUF_joint_5farray_2eproto__INCLUDED
#define PROTOBUF_joint_5farray_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "component_base.pb.h"
#include "trajectory.pb.h"
#include "joint.pb.h"
#include "smoothing_mode.pb.h"
#include "joint_array_mode.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_joint_5farray_2eproto();
void protobuf_AssignDesc_joint_5farray_2eproto();
void protobuf_ShutdownFile_joint_5farray_2eproto();

class M3JointArrayStatus;
class M3JointArrayCommand;
class M3JointArrayParam;

// ===================================================================

class M3JointArrayStatus : public ::google::protobuf::Message {
 public:
  M3JointArrayStatus();
  virtual ~M3JointArrayStatus();

  M3JointArrayStatus(const M3JointArrayStatus& from);

  inline M3JointArrayStatus& operator=(const M3JointArrayStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3JointArrayStatus& default_instance();

  void Swap(M3JointArrayStatus* other);

  // implements Message ----------------------------------------------

  M3JointArrayStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3JointArrayStatus& from);
  void MergeFrom(const M3JointArrayStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .M3BaseStatus base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline const ::M3BaseStatus& base() const;
  inline ::M3BaseStatus* mutable_base();
  inline ::M3BaseStatus* release_base();
  inline void set_allocated_base(::M3BaseStatus* base);

  // repeated double motor_temp = 2;
  inline int motor_temp_size() const;
  inline void clear_motor_temp();
  static const int kMotorTempFieldNumber = 2;
  inline double motor_temp(int index) const;
  inline void set_motor_temp(int index, double value);
  inline void add_motor_temp(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      motor_temp() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_motor_temp();

  // repeated double amp_temp = 3;
  inline int amp_temp_size() const;
  inline void clear_amp_temp();
  static const int kAmpTempFieldNumber = 3;
  inline double amp_temp(int index) const;
  inline void set_amp_temp(int index, double value);
  inline void add_amp_temp(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      amp_temp() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_amp_temp();

  // repeated double current = 4;
  inline int current_size() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 4;
  inline double current(int index) const;
  inline void set_current(int index, double value);
  inline void add_current(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      current() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_current();

  // repeated double torque = 5;
  inline int torque_size() const;
  inline void clear_torque();
  static const int kTorqueFieldNumber = 5;
  inline double torque(int index) const;
  inline void set_torque(int index, double value);
  inline void add_torque(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      torque() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_torque();

  // repeated double torquedot = 6;
  inline int torquedot_size() const;
  inline void clear_torquedot();
  static const int kTorquedotFieldNumber = 6;
  inline double torquedot(int index) const;
  inline void set_torquedot(int index, double value);
  inline void add_torquedot(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      torquedot() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_torquedot();

  // repeated double theta = 7;
  inline int theta_size() const;
  inline void clear_theta();
  static const int kThetaFieldNumber = 7;
  inline double theta(int index) const;
  inline void set_theta(int index, double value);
  inline void add_theta(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      theta() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_theta();

  // repeated double thetadot = 8;
  inline int thetadot_size() const;
  inline void clear_thetadot();
  static const int kThetadotFieldNumber = 8;
  inline double thetadot(int index) const;
  inline void set_thetadot(int index, double value);
  inline void add_thetadot(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      thetadot() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_thetadot();

  // repeated double thetadotdot = 9;
  inline int thetadotdot_size() const;
  inline void clear_thetadotdot();
  static const int kThetadotdotFieldNumber = 9;
  inline double thetadotdot(int index) const;
  inline void set_thetadotdot(int index, double value);
  inline void add_thetadotdot(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      thetadotdot() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_thetadotdot();

  // optional int32 completed_spline_idx = 10;
  inline bool has_completed_spline_idx() const;
  inline void clear_completed_spline_idx();
  static const int kCompletedSplineIdxFieldNumber = 10;
  inline ::google::protobuf::int32 completed_spline_idx() const;
  inline void set_completed_spline_idx(::google::protobuf::int32 value);

  // repeated int32 pwm_cmd = 11;
  inline int pwm_cmd_size() const;
  inline void clear_pwm_cmd();
  static const int kPwmCmdFieldNumber = 11;
  inline ::google::protobuf::int32 pwm_cmd(int index) const;
  inline void set_pwm_cmd(int index, ::google::protobuf::int32 value);
  inline void add_pwm_cmd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwm_cmd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwm_cmd();

  // repeated int32 flags = 12;
  inline int flags_size() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 12;
  inline ::google::protobuf::int32 flags(int index) const;
  inline void set_flags(int index, ::google::protobuf::int32 value);
  inline void add_flags(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flags() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flags();

  // @@protoc_insertion_point(class_scope:M3JointArrayStatus)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_completed_spline_idx();
  inline void clear_has_completed_spline_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::M3BaseStatus* base_;
  ::google::protobuf::RepeatedField< double > motor_temp_;
  ::google::protobuf::RepeatedField< double > amp_temp_;
  ::google::protobuf::RepeatedField< double > current_;
  ::google::protobuf::RepeatedField< double > torque_;
  ::google::protobuf::RepeatedField< double > torquedot_;
  ::google::protobuf::RepeatedField< double > theta_;
  ::google::protobuf::RepeatedField< double > thetadot_;
  ::google::protobuf::RepeatedField< double > thetadotdot_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwm_cmd_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flags_;
  ::google::protobuf::int32 completed_spline_idx_;
  friend void  protobuf_AddDesc_joint_5farray_2eproto();
  friend void protobuf_AssignDesc_joint_5farray_2eproto();
  friend void protobuf_ShutdownFile_joint_5farray_2eproto();

  void InitAsDefaultInstance();
  static M3JointArrayStatus* default_instance_;
};
// -------------------------------------------------------------------

class M3JointArrayCommand : public ::google::protobuf::Message {
 public:
  M3JointArrayCommand();
  virtual ~M3JointArrayCommand();

  M3JointArrayCommand(const M3JointArrayCommand& from);

  inline M3JointArrayCommand& operator=(const M3JointArrayCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3JointArrayCommand& default_instance();

  void Swap(M3JointArrayCommand* other);

  // implements Message ----------------------------------------------

  M3JointArrayCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3JointArrayCommand& from);
  void MergeFrom(const M3JointArrayCommand& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double tq_desired = 1;
  inline int tq_desired_size() const;
  inline void clear_tq_desired();
  static const int kTqDesiredFieldNumber = 1;
  inline double tq_desired(int index) const;
  inline void set_tq_desired(int index, double value);
  inline void add_tq_desired(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      tq_desired() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_tq_desired();

  // repeated int32 pwm_desired = 2;
  inline int pwm_desired_size() const;
  inline void clear_pwm_desired();
  static const int kPwmDesiredFieldNumber = 2;
  inline ::google::protobuf::int32 pwm_desired(int index) const;
  inline void set_pwm_desired(int index, ::google::protobuf::int32 value);
  inline void add_pwm_desired(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pwm_desired() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pwm_desired();

  // repeated double q_stiffness = 3;
  inline int q_stiffness_size() const;
  inline void clear_q_stiffness();
  static const int kQStiffnessFieldNumber = 3;
  inline double q_stiffness(int index) const;
  inline void set_q_stiffness(int index, double value);
  inline void add_q_stiffness(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      q_stiffness() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_q_stiffness();

  // repeated .JOINT_ARRAY_MODE ctrl_mode = 4;
  inline int ctrl_mode_size() const;
  inline void clear_ctrl_mode();
  static const int kCtrlModeFieldNumber = 4;
  inline ::JOINT_ARRAY_MODE ctrl_mode(int index) const;
  inline void set_ctrl_mode(int index, ::JOINT_ARRAY_MODE value);
  inline void add_ctrl_mode(::JOINT_ARRAY_MODE value);
  inline const ::google::protobuf::RepeatedField<int>& ctrl_mode() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_ctrl_mode();

  // repeated .M3JointVia vias = 5;
  inline int vias_size() const;
  inline void clear_vias();
  static const int kViasFieldNumber = 5;
  inline const ::M3JointVia& vias(int index) const;
  inline ::M3JointVia* mutable_vias(int index);
  inline ::M3JointVia* add_vias();
  inline const ::google::protobuf::RepeatedPtrField< ::M3JointVia >&
      vias() const;
  inline ::google::protobuf::RepeatedPtrField< ::M3JointVia >*
      mutable_vias();

  // repeated double q_desired = 6;
  inline int q_desired_size() const;
  inline void clear_q_desired();
  static const int kQDesiredFieldNumber = 6;
  inline double q_desired(int index) const;
  inline void set_q_desired(int index, double value);
  inline void add_q_desired(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      q_desired() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_q_desired();

  // repeated double pos_desired = 7;
  inline int pos_desired_size() const;
  inline void clear_pos_desired();
  static const int kPosDesiredFieldNumber = 7;
  inline double pos_desired(int index) const;
  inline void set_pos_desired(int index, double value);
  inline void add_pos_desired(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      pos_desired() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_pos_desired();

  // repeated double qdot_desired = 8;
  inline int qdot_desired_size() const;
  inline void clear_qdot_desired();
  static const int kQdotDesiredFieldNumber = 8;
  inline double qdot_desired(int index) const;
  inline void set_qdot_desired(int index, double value);
  inline void add_qdot_desired(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      qdot_desired() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_qdot_desired();

  // repeated double q_slew_rate = 9;
  inline int q_slew_rate_size() const;
  inline void clear_q_slew_rate();
  static const int kQSlewRateFieldNumber = 9;
  inline double q_slew_rate(int index) const;
  inline void set_q_slew_rate(int index, double value);
  inline void add_q_slew_rate(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      q_slew_rate() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_q_slew_rate();

  // repeated .SMOOTHING_MODE smoothing_mode = 10;
  inline int smoothing_mode_size() const;
  inline void clear_smoothing_mode();
  static const int kSmoothingModeFieldNumber = 10;
  inline ::SMOOTHING_MODE smoothing_mode(int index) const;
  inline void set_smoothing_mode(int index, ::SMOOTHING_MODE value);
  inline void add_smoothing_mode(::SMOOTHING_MODE value);
  inline const ::google::protobuf::RepeatedField<int>& smoothing_mode() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_smoothing_mode();

  // @@protoc_insertion_point(class_scope:M3JointArrayCommand)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > tq_desired_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pwm_desired_;
  ::google::protobuf::RepeatedField< double > q_stiffness_;
  ::google::protobuf::RepeatedField<int> ctrl_mode_;
  ::google::protobuf::RepeatedPtrField< ::M3JointVia > vias_;
  ::google::protobuf::RepeatedField< double > q_desired_;
  ::google::protobuf::RepeatedField< double > pos_desired_;
  ::google::protobuf::RepeatedField< double > qdot_desired_;
  ::google::protobuf::RepeatedField< double > q_slew_rate_;
  ::google::protobuf::RepeatedField<int> smoothing_mode_;
  friend void  protobuf_AddDesc_joint_5farray_2eproto();
  friend void protobuf_AssignDesc_joint_5farray_2eproto();
  friend void protobuf_ShutdownFile_joint_5farray_2eproto();

  void InitAsDefaultInstance();
  static M3JointArrayCommand* default_instance_;
};
// -------------------------------------------------------------------

class M3JointArrayParam : public ::google::protobuf::Message {
 public:
  M3JointArrayParam();
  virtual ~M3JointArrayParam();

  M3JointArrayParam(const M3JointArrayParam& from);

  inline M3JointArrayParam& operator=(const M3JointArrayParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const M3JointArrayParam& default_instance();

  void Swap(M3JointArrayParam* other);

  // implements Message ----------------------------------------------

  M3JointArrayParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const M3JointArrayParam& from);
  void MergeFrom(const M3JointArrayParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double test = 1;
  inline bool has_test() const;
  inline void clear_test();
  static const int kTestFieldNumber = 1;
  inline double test() const;
  inline void set_test(double value);

  // @@protoc_insertion_point(class_scope:M3JointArrayParam)
 private:
  inline void set_has_test();
  inline void clear_has_test();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double test_;
  friend void  protobuf_AddDesc_joint_5farray_2eproto();
  friend void protobuf_AssignDesc_joint_5farray_2eproto();
  friend void protobuf_ShutdownFile_joint_5farray_2eproto();

  void InitAsDefaultInstance();
  static M3JointArrayParam* default_instance_;
};
// ===================================================================


// ===================================================================

// M3JointArrayStatus

// optional .M3BaseStatus base = 1;
inline bool M3JointArrayStatus::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void M3JointArrayStatus::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void M3JointArrayStatus::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void M3JointArrayStatus::clear_base() {
  if (base_ != NULL) base_->::M3BaseStatus::Clear();
  clear_has_base();
}
inline const ::M3BaseStatus& M3JointArrayStatus::base() const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
inline ::M3BaseStatus* M3JointArrayStatus::mutable_base() {
  set_has_base();
  if (base_ == NULL) base_ = new ::M3BaseStatus;
  // @@protoc_insertion_point(field_mutable:M3JointArrayStatus.base)
  return base_;
}
inline ::M3BaseStatus* M3JointArrayStatus::release_base() {
  clear_has_base();
  ::M3BaseStatus* temp = base_;
  base_ = NULL;
  return temp;
}
inline void M3JointArrayStatus::set_allocated_base(::M3BaseStatus* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:M3JointArrayStatus.base)
}

// repeated double motor_temp = 2;
inline int M3JointArrayStatus::motor_temp_size() const {
  return motor_temp_.size();
}
inline void M3JointArrayStatus::clear_motor_temp() {
  motor_temp_.Clear();
}
inline double M3JointArrayStatus::motor_temp(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.motor_temp)
  return motor_temp_.Get(index);
}
inline void M3JointArrayStatus::set_motor_temp(int index, double value) {
  motor_temp_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.motor_temp)
}
inline void M3JointArrayStatus::add_motor_temp(double value) {
  motor_temp_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.motor_temp)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::motor_temp() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.motor_temp)
  return motor_temp_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_motor_temp() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.motor_temp)
  return &motor_temp_;
}

// repeated double amp_temp = 3;
inline int M3JointArrayStatus::amp_temp_size() const {
  return amp_temp_.size();
}
inline void M3JointArrayStatus::clear_amp_temp() {
  amp_temp_.Clear();
}
inline double M3JointArrayStatus::amp_temp(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.amp_temp)
  return amp_temp_.Get(index);
}
inline void M3JointArrayStatus::set_amp_temp(int index, double value) {
  amp_temp_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.amp_temp)
}
inline void M3JointArrayStatus::add_amp_temp(double value) {
  amp_temp_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.amp_temp)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::amp_temp() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.amp_temp)
  return amp_temp_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_amp_temp() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.amp_temp)
  return &amp_temp_;
}

// repeated double current = 4;
inline int M3JointArrayStatus::current_size() const {
  return current_.size();
}
inline void M3JointArrayStatus::clear_current() {
  current_.Clear();
}
inline double M3JointArrayStatus::current(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.current)
  return current_.Get(index);
}
inline void M3JointArrayStatus::set_current(int index, double value) {
  current_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.current)
}
inline void M3JointArrayStatus::add_current(double value) {
  current_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.current)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::current() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.current)
  return current_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_current() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.current)
  return &current_;
}

// repeated double torque = 5;
inline int M3JointArrayStatus::torque_size() const {
  return torque_.size();
}
inline void M3JointArrayStatus::clear_torque() {
  torque_.Clear();
}
inline double M3JointArrayStatus::torque(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.torque)
  return torque_.Get(index);
}
inline void M3JointArrayStatus::set_torque(int index, double value) {
  torque_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.torque)
}
inline void M3JointArrayStatus::add_torque(double value) {
  torque_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.torque)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::torque() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.torque)
  return torque_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_torque() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.torque)
  return &torque_;
}

// repeated double torquedot = 6;
inline int M3JointArrayStatus::torquedot_size() const {
  return torquedot_.size();
}
inline void M3JointArrayStatus::clear_torquedot() {
  torquedot_.Clear();
}
inline double M3JointArrayStatus::torquedot(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.torquedot)
  return torquedot_.Get(index);
}
inline void M3JointArrayStatus::set_torquedot(int index, double value) {
  torquedot_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.torquedot)
}
inline void M3JointArrayStatus::add_torquedot(double value) {
  torquedot_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.torquedot)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::torquedot() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.torquedot)
  return torquedot_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_torquedot() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.torquedot)
  return &torquedot_;
}

// repeated double theta = 7;
inline int M3JointArrayStatus::theta_size() const {
  return theta_.size();
}
inline void M3JointArrayStatus::clear_theta() {
  theta_.Clear();
}
inline double M3JointArrayStatus::theta(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.theta)
  return theta_.Get(index);
}
inline void M3JointArrayStatus::set_theta(int index, double value) {
  theta_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.theta)
}
inline void M3JointArrayStatus::add_theta(double value) {
  theta_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.theta)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::theta() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.theta)
  return theta_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_theta() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.theta)
  return &theta_;
}

// repeated double thetadot = 8;
inline int M3JointArrayStatus::thetadot_size() const {
  return thetadot_.size();
}
inline void M3JointArrayStatus::clear_thetadot() {
  thetadot_.Clear();
}
inline double M3JointArrayStatus::thetadot(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.thetadot)
  return thetadot_.Get(index);
}
inline void M3JointArrayStatus::set_thetadot(int index, double value) {
  thetadot_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.thetadot)
}
inline void M3JointArrayStatus::add_thetadot(double value) {
  thetadot_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.thetadot)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::thetadot() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.thetadot)
  return thetadot_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_thetadot() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.thetadot)
  return &thetadot_;
}

// repeated double thetadotdot = 9;
inline int M3JointArrayStatus::thetadotdot_size() const {
  return thetadotdot_.size();
}
inline void M3JointArrayStatus::clear_thetadotdot() {
  thetadotdot_.Clear();
}
inline double M3JointArrayStatus::thetadotdot(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.thetadotdot)
  return thetadotdot_.Get(index);
}
inline void M3JointArrayStatus::set_thetadotdot(int index, double value) {
  thetadotdot_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.thetadotdot)
}
inline void M3JointArrayStatus::add_thetadotdot(double value) {
  thetadotdot_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.thetadotdot)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayStatus::thetadotdot() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.thetadotdot)
  return thetadotdot_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayStatus::mutable_thetadotdot() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.thetadotdot)
  return &thetadotdot_;
}

// optional int32 completed_spline_idx = 10;
inline bool M3JointArrayStatus::has_completed_spline_idx() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void M3JointArrayStatus::set_has_completed_spline_idx() {
  _has_bits_[0] |= 0x00000200u;
}
inline void M3JointArrayStatus::clear_has_completed_spline_idx() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void M3JointArrayStatus::clear_completed_spline_idx() {
  completed_spline_idx_ = 0;
  clear_has_completed_spline_idx();
}
inline ::google::protobuf::int32 M3JointArrayStatus::completed_spline_idx() const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.completed_spline_idx)
  return completed_spline_idx_;
}
inline void M3JointArrayStatus::set_completed_spline_idx(::google::protobuf::int32 value) {
  set_has_completed_spline_idx();
  completed_spline_idx_ = value;
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.completed_spline_idx)
}

// repeated int32 pwm_cmd = 11;
inline int M3JointArrayStatus::pwm_cmd_size() const {
  return pwm_cmd_.size();
}
inline void M3JointArrayStatus::clear_pwm_cmd() {
  pwm_cmd_.Clear();
}
inline ::google::protobuf::int32 M3JointArrayStatus::pwm_cmd(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.pwm_cmd)
  return pwm_cmd_.Get(index);
}
inline void M3JointArrayStatus::set_pwm_cmd(int index, ::google::protobuf::int32 value) {
  pwm_cmd_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.pwm_cmd)
}
inline void M3JointArrayStatus::add_pwm_cmd(::google::protobuf::int32 value) {
  pwm_cmd_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.pwm_cmd)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
M3JointArrayStatus::pwm_cmd() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.pwm_cmd)
  return pwm_cmd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
M3JointArrayStatus::mutable_pwm_cmd() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.pwm_cmd)
  return &pwm_cmd_;
}

// repeated int32 flags = 12;
inline int M3JointArrayStatus::flags_size() const {
  return flags_.size();
}
inline void M3JointArrayStatus::clear_flags() {
  flags_.Clear();
}
inline ::google::protobuf::int32 M3JointArrayStatus::flags(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayStatus.flags)
  return flags_.Get(index);
}
inline void M3JointArrayStatus::set_flags(int index, ::google::protobuf::int32 value) {
  flags_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayStatus.flags)
}
inline void M3JointArrayStatus::add_flags(::google::protobuf::int32 value) {
  flags_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayStatus.flags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
M3JointArrayStatus::flags() const {
  // @@protoc_insertion_point(field_list:M3JointArrayStatus.flags)
  return flags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
M3JointArrayStatus::mutable_flags() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayStatus.flags)
  return &flags_;
}

// -------------------------------------------------------------------

// M3JointArrayCommand

// repeated double tq_desired = 1;
inline int M3JointArrayCommand::tq_desired_size() const {
  return tq_desired_.size();
}
inline void M3JointArrayCommand::clear_tq_desired() {
  tq_desired_.Clear();
}
inline double M3JointArrayCommand::tq_desired(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.tq_desired)
  return tq_desired_.Get(index);
}
inline void M3JointArrayCommand::set_tq_desired(int index, double value) {
  tq_desired_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.tq_desired)
}
inline void M3JointArrayCommand::add_tq_desired(double value) {
  tq_desired_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.tq_desired)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayCommand::tq_desired() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.tq_desired)
  return tq_desired_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayCommand::mutable_tq_desired() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.tq_desired)
  return &tq_desired_;
}

// repeated int32 pwm_desired = 2;
inline int M3JointArrayCommand::pwm_desired_size() const {
  return pwm_desired_.size();
}
inline void M3JointArrayCommand::clear_pwm_desired() {
  pwm_desired_.Clear();
}
inline ::google::protobuf::int32 M3JointArrayCommand::pwm_desired(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.pwm_desired)
  return pwm_desired_.Get(index);
}
inline void M3JointArrayCommand::set_pwm_desired(int index, ::google::protobuf::int32 value) {
  pwm_desired_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.pwm_desired)
}
inline void M3JointArrayCommand::add_pwm_desired(::google::protobuf::int32 value) {
  pwm_desired_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.pwm_desired)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
M3JointArrayCommand::pwm_desired() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.pwm_desired)
  return pwm_desired_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
M3JointArrayCommand::mutable_pwm_desired() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.pwm_desired)
  return &pwm_desired_;
}

// repeated double q_stiffness = 3;
inline int M3JointArrayCommand::q_stiffness_size() const {
  return q_stiffness_.size();
}
inline void M3JointArrayCommand::clear_q_stiffness() {
  q_stiffness_.Clear();
}
inline double M3JointArrayCommand::q_stiffness(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.q_stiffness)
  return q_stiffness_.Get(index);
}
inline void M3JointArrayCommand::set_q_stiffness(int index, double value) {
  q_stiffness_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.q_stiffness)
}
inline void M3JointArrayCommand::add_q_stiffness(double value) {
  q_stiffness_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.q_stiffness)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayCommand::q_stiffness() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.q_stiffness)
  return q_stiffness_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayCommand::mutable_q_stiffness() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.q_stiffness)
  return &q_stiffness_;
}

// repeated .JOINT_ARRAY_MODE ctrl_mode = 4;
inline int M3JointArrayCommand::ctrl_mode_size() const {
  return ctrl_mode_.size();
}
inline void M3JointArrayCommand::clear_ctrl_mode() {
  ctrl_mode_.Clear();
}
inline ::JOINT_ARRAY_MODE M3JointArrayCommand::ctrl_mode(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.ctrl_mode)
  return static_cast< ::JOINT_ARRAY_MODE >(ctrl_mode_.Get(index));
}
inline void M3JointArrayCommand::set_ctrl_mode(int index, ::JOINT_ARRAY_MODE value) {
  assert(::JOINT_ARRAY_MODE_IsValid(value));
  ctrl_mode_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.ctrl_mode)
}
inline void M3JointArrayCommand::add_ctrl_mode(::JOINT_ARRAY_MODE value) {
  assert(::JOINT_ARRAY_MODE_IsValid(value));
  ctrl_mode_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.ctrl_mode)
}
inline const ::google::protobuf::RepeatedField<int>&
M3JointArrayCommand::ctrl_mode() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.ctrl_mode)
  return ctrl_mode_;
}
inline ::google::protobuf::RepeatedField<int>*
M3JointArrayCommand::mutable_ctrl_mode() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.ctrl_mode)
  return &ctrl_mode_;
}

// repeated .M3JointVia vias = 5;
inline int M3JointArrayCommand::vias_size() const {
  return vias_.size();
}
inline void M3JointArrayCommand::clear_vias() {
  vias_.Clear();
}
inline const ::M3JointVia& M3JointArrayCommand::vias(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.vias)
  return vias_.Get(index);
}
inline ::M3JointVia* M3JointArrayCommand::mutable_vias(int index) {
  // @@protoc_insertion_point(field_mutable:M3JointArrayCommand.vias)
  return vias_.Mutable(index);
}
inline ::M3JointVia* M3JointArrayCommand::add_vias() {
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.vias)
  return vias_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::M3JointVia >&
M3JointArrayCommand::vias() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.vias)
  return vias_;
}
inline ::google::protobuf::RepeatedPtrField< ::M3JointVia >*
M3JointArrayCommand::mutable_vias() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.vias)
  return &vias_;
}

// repeated double q_desired = 6;
inline int M3JointArrayCommand::q_desired_size() const {
  return q_desired_.size();
}
inline void M3JointArrayCommand::clear_q_desired() {
  q_desired_.Clear();
}
inline double M3JointArrayCommand::q_desired(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.q_desired)
  return q_desired_.Get(index);
}
inline void M3JointArrayCommand::set_q_desired(int index, double value) {
  q_desired_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.q_desired)
}
inline void M3JointArrayCommand::add_q_desired(double value) {
  q_desired_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.q_desired)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayCommand::q_desired() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.q_desired)
  return q_desired_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayCommand::mutable_q_desired() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.q_desired)
  return &q_desired_;
}

// repeated double pos_desired = 7;
inline int M3JointArrayCommand::pos_desired_size() const {
  return pos_desired_.size();
}
inline void M3JointArrayCommand::clear_pos_desired() {
  pos_desired_.Clear();
}
inline double M3JointArrayCommand::pos_desired(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.pos_desired)
  return pos_desired_.Get(index);
}
inline void M3JointArrayCommand::set_pos_desired(int index, double value) {
  pos_desired_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.pos_desired)
}
inline void M3JointArrayCommand::add_pos_desired(double value) {
  pos_desired_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.pos_desired)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayCommand::pos_desired() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.pos_desired)
  return pos_desired_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayCommand::mutable_pos_desired() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.pos_desired)
  return &pos_desired_;
}

// repeated double qdot_desired = 8;
inline int M3JointArrayCommand::qdot_desired_size() const {
  return qdot_desired_.size();
}
inline void M3JointArrayCommand::clear_qdot_desired() {
  qdot_desired_.Clear();
}
inline double M3JointArrayCommand::qdot_desired(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.qdot_desired)
  return qdot_desired_.Get(index);
}
inline void M3JointArrayCommand::set_qdot_desired(int index, double value) {
  qdot_desired_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.qdot_desired)
}
inline void M3JointArrayCommand::add_qdot_desired(double value) {
  qdot_desired_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.qdot_desired)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayCommand::qdot_desired() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.qdot_desired)
  return qdot_desired_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayCommand::mutable_qdot_desired() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.qdot_desired)
  return &qdot_desired_;
}

// repeated double q_slew_rate = 9;
inline int M3JointArrayCommand::q_slew_rate_size() const {
  return q_slew_rate_.size();
}
inline void M3JointArrayCommand::clear_q_slew_rate() {
  q_slew_rate_.Clear();
}
inline double M3JointArrayCommand::q_slew_rate(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.q_slew_rate)
  return q_slew_rate_.Get(index);
}
inline void M3JointArrayCommand::set_q_slew_rate(int index, double value) {
  q_slew_rate_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.q_slew_rate)
}
inline void M3JointArrayCommand::add_q_slew_rate(double value) {
  q_slew_rate_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.q_slew_rate)
}
inline const ::google::protobuf::RepeatedField< double >&
M3JointArrayCommand::q_slew_rate() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.q_slew_rate)
  return q_slew_rate_;
}
inline ::google::protobuf::RepeatedField< double >*
M3JointArrayCommand::mutable_q_slew_rate() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.q_slew_rate)
  return &q_slew_rate_;
}

// repeated .SMOOTHING_MODE smoothing_mode = 10;
inline int M3JointArrayCommand::smoothing_mode_size() const {
  return smoothing_mode_.size();
}
inline void M3JointArrayCommand::clear_smoothing_mode() {
  smoothing_mode_.Clear();
}
inline ::SMOOTHING_MODE M3JointArrayCommand::smoothing_mode(int index) const {
  // @@protoc_insertion_point(field_get:M3JointArrayCommand.smoothing_mode)
  return static_cast< ::SMOOTHING_MODE >(smoothing_mode_.Get(index));
}
inline void M3JointArrayCommand::set_smoothing_mode(int index, ::SMOOTHING_MODE value) {
  assert(::SMOOTHING_MODE_IsValid(value));
  smoothing_mode_.Set(index, value);
  // @@protoc_insertion_point(field_set:M3JointArrayCommand.smoothing_mode)
}
inline void M3JointArrayCommand::add_smoothing_mode(::SMOOTHING_MODE value) {
  assert(::SMOOTHING_MODE_IsValid(value));
  smoothing_mode_.Add(value);
  // @@protoc_insertion_point(field_add:M3JointArrayCommand.smoothing_mode)
}
inline const ::google::protobuf::RepeatedField<int>&
M3JointArrayCommand::smoothing_mode() const {
  // @@protoc_insertion_point(field_list:M3JointArrayCommand.smoothing_mode)
  return smoothing_mode_;
}
inline ::google::protobuf::RepeatedField<int>*
M3JointArrayCommand::mutable_smoothing_mode() {
  // @@protoc_insertion_point(field_mutable_list:M3JointArrayCommand.smoothing_mode)
  return &smoothing_mode_;
}

// -------------------------------------------------------------------

// M3JointArrayParam

// optional double test = 1;
inline bool M3JointArrayParam::has_test() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void M3JointArrayParam::set_has_test() {
  _has_bits_[0] |= 0x00000001u;
}
inline void M3JointArrayParam::clear_has_test() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void M3JointArrayParam::clear_test() {
  test_ = 0;
  clear_has_test();
}
inline double M3JointArrayParam::test() const {
  // @@protoc_insertion_point(field_get:M3JointArrayParam.test)
  return test_;
}
inline void M3JointArrayParam::set_test(double value) {
  set_has_test();
  test_ = value;
  // @@protoc_insertion_point(field_set:M3JointArrayParam.test)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_joint_5farray_2eproto__INCLUDED
